import pygame
import sys

# Initialize Pygame
pygame.init()

# Set up the screen
SCREEN_WIDTH, SCREEN_HEIGHT = 300, 300
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption("Tic-Tac-Toe")

# Define colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)

# Define the board
board = [[' ' for _ in range(3)] for _ in range(3)]

# Define font
font = pygame.font.Font(None, 50)

# Function to draw the grid lines
def draw_grid():
    for i in range(1, 3):
        pygame.draw.line(screen, BLACK, (i * SCREEN_WIDTH // 3, 0), (i * SCREEN_WIDTH // 3, SCREEN_HEIGHT), 3)
        pygame.draw.line(screen, BLACK, (0, i * SCREEN_HEIGHT // 3), (SCREEN_WIDTH, i * SCREEN_HEIGHT // 3), 3)

# Function to draw the Xs and Os
def draw_XO():
    for row in range(3):
        for col in range(3):
            if board[row][col] == 'X':
                text_surface = font.render('X', True, BLACK)
                screen.blit(text_surface, (col * SCREEN_WIDTH // 3 + 30, row * SCREEN_HEIGHT // 3 + 30))
            elif board[row][col] == 'O':
                text_surface = font.render('O', True, BLACK)
                screen.blit(text_surface, (col * SCREEN_WIDTH // 3 + 30, row * SCREEN_HEIGHT // 3 + 30))

# Function to check for a winner
def check_winner():
    # Check rows
    for row in board:
        if row[0] == row[1] == row[2] and row[0] != ' ':
            return row[0]

    # Check columns
    for col in range(3):
        if board[0][col] == board[1][col] == board[2][col] and board[0][col] != ' ':
            return board[0][col]

    # Check diagonals
    if board[0][0] == board[1][1] == board[2][2] and board[0][0] != ' ':
        return board[0][0]
    if board[0][2] == board[1][1] == board[2][0] and board[0][2] != ' ':
        return board[0][2]

    return None

# Main game loop
current_player = 'X'
running = True
while running:
    # Handle events
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.MOUSEBUTTONDOWN:
            x, y = pygame.mouse.get_pos()
            row = y // (SCREEN_HEIGHT // 3)
            col = x // (SCREEN_WIDTH // 3)
            if board[row][col] == ' ':
                board[row][col] = current_player
                winner = check_winner()
                if winner:
                    print(f"{winner} wins!")
                    running = False
                else:
                    current_player = 'O' if current_player == 'X' else 'X'

    # Clear the screen
    screen.fill(WHITE)

    # Draw the grid
    draw_grid()

    # Draw the Xs and Os
    draw_XO()

    # Update the display
    pygame.display.flip()

# Quit Pygame
pygame.quit()
sys.exit()
